import streamlit as st
from openai import OpenAI
import requests

st.set_page_config(page_title="AIMM - AI Income Machine", layout="wide")
st.title("🤖 AIMM - Autonomous Income Maximization Machine")

# Input API keys
openai_key = st.sidebar.text_input("🔑 OpenAI API Key", type="password")
zapier_webhook = st.sidebar.text_input("🌐 Zapier Webhook URL", type="password")

# Setup state
if "idea" not in st.session_state:
    st.session_state.idea = ""
if "image_url" not in st.session_state:
    st.session_state.image_url = ""

# Button 1: Generate Business Idea
if st.button("💡 Generate Business Idea"):
    try:
        client = OpenAI(api_key=openai_key)
        with st.spinner("Thinking of an idea..."):
            response = client.chat.completions.create(
                model="gpt-4o",
                messages=[
                    {"role": "system", "content": "You are an AI that generates fast, profitable product ideas."},
                    {"role": "user", "content": "Give me a new AI merch idea I can sell on Etsy."}
                ]
            )
            st.session_state.idea = response.choices[0].message.content
        st.success("Idea generated!")
    except Exception as e:
        st.error(f"❌ Error generating idea: {e}")

# Show idea
if st.session_state.idea:
    st.subheader("💡 Business Idea")
    st.write(st.session_state.idea)

# Button 2: Generate DALL·E Image
if st.session_state.idea and st.button("🎨 Create DALL·E Branding Image"):
    try:
        client = OpenAI(api_key=openai_key)
        with st.spinner("Creating image..."):
            response = client.images.generate(
                model="dall-e-3",
                prompt=f"Brand logo or illustration for: {st.session_state.idea}",
                size="1024x1024",
                quality="standard",
                n=1
            )
            st.session_state.image_url = response.data[0].url
        st.success("Image created!")
    except Exception as e:
        st.error(f"❌ Error generating image: {e}")

# Show image
if st.session_state.image_url:
    st.image(st.session_state.image_url, caption="Generated by DALL·E 3")

# Button 3: Send to Zapier
if st.session_state.idea and st.session_state.image_url and st.button("🚀 Automate with Zapier"):
    if zapier_webhook:
        try:
            payload = {
                "title": st.session_state.idea[:100],
                "description": st.session_state.idea,
                "image_url": st.session_state.image_url,
                "price": "29.99",
                "category": "Apparel"
            }
            response = requests.post(zapier_webhook, json=payload)
            if response.status_code == 200:
                st.success("📤 Sent to Zapier!")
            else:
                st.error(f"❌ Zapier failed with status code: {response.status_code}")
        except Exception as e:
            st.error(f"❌ Error sending to Zapier: {e}")
    else:
        st.warning("⚠️ Please enter a Zapier Webhook URL.")